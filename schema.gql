# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""New user input"""
input AddUserInput {
  username: String!
  email: String!
  password: String!
  confirmPassword: String!
  random: JSONObject
  createdAt: DateTime
  updatedAt: DateTime
}

type Company {
  id: Float!
  name: String!
  age: Float!
  address: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

"""Login user input"""
input LoginUserInput {
  username: String!
  password: String!
}

type Mutation {
  """create User"""
  createUser(input: AddUserInput!): User!

  """Update User"""
  updateUser(input: UpdateUserInput!): User

  """Delete User"""
  deleteUser(id: ObjectId!): String
  login(password: String!, email: String!): User

  """login user"""
  loginUser(input: LoginUserInput!): User!
}

"""Mongo object id scalar type"""
scalar ObjectId

type Query {
  """Get a User"""
  user(id: String): User

  """list of users"""
  users(input: QueryParams): [User!]!

  """list of companies"""
  companies: [Company!]!
}

"""dynamic query"""
input QueryParams {
  query: JSONObject
}

"""Update user input"""
input UpdateUserInput {
  id: ObjectId!
  patch: JSONObject!
  updatedAt: DateTime
}

type User {
  _id: ObjectId!
  username: String!
  email: String!
  password: String!
  token: String!
  user: JSONObject
}
